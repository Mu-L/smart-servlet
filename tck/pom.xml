<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>tech.smartboot.jakarta.tck</groupId>
    <artifactId>servlet-tck-run</artifactId>
    <version>1.0.0-SNAPSHOT</version>

    <name>tck-build</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.sources>11</maven.compiler.sources>
        <maven.compiler.release>11</maven.compiler.release>
        <junit.version>5.10.3</junit.version>
        <slf4j.version>1.7.36</slf4j.version>
        <jakarta.tck.version>6.1.0</jakarta.tck.version>
        <servlet.api.version>6.1.0</servlet.api.version>
        <fork.argLine>-Xmx8g -Xms4g</fork.argLine>
        <http2.timeout></http2.timeout>


        <junit.jupiter.execution.parallel.enabled>false</junit.jupiter.execution.parallel.enabled>
        <junit.jupiter.execution.parallel.mode.default>same_thread</junit.jupiter.execution.parallel.mode.default>
        <junit.jupiter.execution.parallel.mode.classes.default>concurrent</junit.jupiter.execution.parallel.mode.classes.default>
        <junit.jupiter.execution.parallel.config.strategy>fixed</junit.jupiter.execution.parallel.config.strategy>
        <junit.jupiter.execution.parallel.config.fixed.parallelism>2</junit.jupiter.execution.parallel.config.fixed.parallelism>
        <junit.jupiter.extensions.autodetection.enabled>false</junit.jupiter.extensions.autodetection.enabled>
        <smart.servlet.version>2.2</smart.servlet.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>tech.smartboot.servlet</groupId>
                <artifactId>servlet-core</artifactId>
                <version>2.2</version>
            </dependency>
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>${junit.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.arquillian</groupId>
                <artifactId>arquillian-bom</artifactId>
                <version>1.8.1.Final</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.shrinkwrap.resolver</groupId>
                <artifactId>shrinkwrap-resolver-bom</artifactId>
                <version>3.3.0</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>jakarta.tck</groupId>
            <artifactId>servlet-tck-runtime</artifactId>
            <version>6.1.0</version>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.glassfish.metro</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>jakarta.servlet</groupId>
            <artifactId>jakarta.servlet-api</artifactId>
            <version>${servlet.api.version}</version>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jul-to-slf4j</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.container</groupId>
            <artifactId>arquillian-container-test-spi</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.junit5</groupId>
            <artifactId>arquillian-junit5-container</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- just make Intellij/jpms happy when having all the projects together -->
        <dependency>
            <groupId>tech.smartboot.servlet</groupId>
            <artifactId>servlet-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mortbay.jasper</groupId>
            <artifactId>apache-jsp</artifactId>
            <version>10.1.5</version>
        </dependency>
    </dependencies>

    <build>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>3.4.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.3.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.13.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>3.3.0</version>
                    <configuration>
                        <!-- this need some times to run -->
                        <argLine>${fork.argLine} -Duser.language=en -Duser.country=US -Djava.locale.providers=COMPAT,CLDR
                            -Djava.protocol.handler.pkgs=javax.net.ssl
                            -Djavax.net.ssl.keyStore=${project.build.testOutputDirectory}/certificates/clientcert.jks
                            -Djavax.net.ssl.keyStorePassword=changeit
                            -Djavax.net.ssl.trustStore=${project.build.directory}/cacerts.jks</argLine>
                        <forkedProcessTimeoutInSeconds>15000</forkedProcessTimeoutInSeconds>
                        <dependenciesToScan>
                            <dependenciesToScan>jakarta.tck:servlet-tck-runtime</dependenciesToScan>
                        </dependenciesToScan>
                        <systemProperties>
                            <http2.timeout>${http2.timeout}</http2.timeout>
                            <servlet.tck.support.crossContext>false</servlet.tck.support.crossContext>
                        </systemProperties>
                        <!--            <includes>-->
                        <!--              <include>**/URLClient*</include>-->
                        <!--              <include>**/Client*</include>-->
                        <!--            </includes>-->
                        <!--            <excludes>-->
                        <!--              <exclude>**/BaseUrlClient</exclude>-->
                        <!--            </excludes>-->
                        <trimStackTrace>false</trimStackTrace>
                        <properties>
                            <configurationParameters>
                                junit.jupiter.execution.parallel.enabled=${junit.jupiter.execution.parallel.enabled}
                                junit.jupiter.execution.parallel.mode.default=${junit.jupiter.execution.parallel.mode.default}
                                junit.jupiter.execution.parallel.mode.classes.default=${junit.jupiter.execution.parallel.mode.classes.default}
                                junit.jupiter.execution.parallel.config.strategy=${junit.jupiter.execution.parallel.config.strategy}
                                junit.jupiter.execution.parallel.config.fixed.parallelism=${junit.jupiter.execution.parallel.config.fixed.parallelism}
                                junit.jupiter.extensions.autodetection.enabled=${junit.jupiter.extensions.autodetection.enabled}
                            </configurationParameters>
                        </properties>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.basepom.maven</groupId>
                    <artifactId>duplicate-finder-maven-plugin</artifactId>
                    <version>2.0.1</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.7.1</version>
                <executions>
                    <execution>
                        <id>unpack</id>
                        <phase>generate-test-resources</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>jakarta.tck</groupId>
                                    <artifactId>servlet-tck-runtime</artifactId>
                                    <type>jar</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.testOutputDirectory}/</outputDirectory>
                                    <includes>**/**cts_cert,**/**clientcert.jks,**/**clientcert.p12</includes>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>keytool-maven-plugin</artifactId>
                <version>1.7</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>importCertificate</goal>
                        </goals>
                        <phase>process-test-resources</phase>
                    </execution>
                </executions>
                <configuration>
                    <!-- "$JAVA_HOME/bin/keytool -import -noprompt -alias cts -dname \"CN=CTS, OU=Java Software, O=Sun Microsystems Inc., L=Burlington, ST=MA, C=US\"
                    -file servlet-tck/bin/certificates/cts_cert -storetype JKS  -keystore cacerts.jks -storepass changeit -keypass changeit" -->
                    <noprompt>true</noprompt>
                    <alias>cts</alias>
                    <dname>CN=CTS, OU=Java Software, O=Sun Microsystems Inc., L=Burlington, ST=MA, C=US</dname>
                    <file>${project.build.testOutputDirectory}/certificates/cts_cert</file>
                    <storetype>JKS</storetype>
                    <keystore>${project.build.directory}/cacerts.jks</keystore>
                    <storepass>changeit</storepass>
                    <keypass>changeit</keypass>
                    <skipIfExist>true</skipIfExist>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
            </plugin>
        </plugins>
    </reporting>
</project>
