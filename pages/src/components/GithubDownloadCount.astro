---
// Mermaid.astro
const {code} = Astro.props;
let content = await Astro.slots.render('default');
if (!content) {
    content = ""
}
// 调用 GitHub API 获取下载总量
// const response = await fetch('https://api.github.com/repos/smartboot/smart-servlet/releases',{
//     headers: {
//         'Authorization': 'Bearer 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',
//     }
// });
// const releases = await response.json();
// // console.log(releases)
// // 计算累计发版次数
// const totalReleaseCount = releases.length;
// // 计算下载总量
// let totalDownloadCount = 0;
// releases.forEach((release: { assets: { download_count: number }[] }) => {
//     release.assets.forEach((asset: { download_count: number }) => {
//         totalDownloadCount += asset.download_count;
//     });
// });
---

<style>
    .stats-card {
        background: linear-gradient(135deg, #f0f4ff 0%, #e0f7fa 100%); /* 浅色渐变 */
        border-radius: 16px;
        padding: 1.5rem;
        box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1),
        0 4px 6px -4px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        //cursor: pointer;
    }

    .stats-card:hover {
        box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1);
    }

    .value {
        color: #333; /* 深色文字 */
        font-size: 0.8rem;
        font-weight: 700;
        font-family: 'Inter', system-ui, sans-serif;
        letter-spacing: -0.025em;
        text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease-out;
    }

    @media (min-width: 768px) {
        .stats-card {
            padding: 1rem;
        }

        .value {
            font-size: 2.2rem;
        }
    }
</style>

<div class="stats-card">
    <!-- 新增data-count属性存储最终数值 -->
    <b>截止目前累计发布 <span id="totalReleaseCount">0</span> 个版本，被全球用户 <a
            style="color: black;font-weight: bold" href="/smart-servlet/guides/release_note/"> 下载<span
            id="animatedCounter" class="value" >0</span></a> 次</b>

</div>

<script>
    const response = await fetch('https://api.github.com/repos/smartboot/smart-servlet/releases',{
        headers: {
            'Authorization': 'Bearer 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',
        }
    });
    const releases = await response.json();
    // console.log(releases)
    // 计算累计发版次数
    const totalReleaseCount = releases.length;
    const totalReleaseCounter=document.getElementById('totalReleaseCount')

    // 计算下载总量
    let totalDownloadCount = 0;
    releases.forEach((release: { assets: { download_count: number }[] }) => {
        release.assets.forEach((asset: { download_count: number }) => {
            totalDownloadCount += asset.download_count;
        });
    });

    // 添加数字动画逻辑
    const counter = document.getElementById('animatedCounter');
    const duration = 2000; // 动画时长2秒
    let start = 0;
    const startTime = performance.now();

    const animate = (currentTime) => {
        const elapsed = currentTime - startTime;
        if (elapsed < duration) {
            const progress = elapsed / duration;
            // 添加缓动函数
            const currentCount = Math.floor(easeOutQuad(progress) * totalDownloadCount);
            counter.textContent = currentCount.toLocaleString();
            totalReleaseCounter.textContent = Math.floor(easeOutQuad(progress) * totalReleaseCount);
            requestAnimationFrame(animate);
        } else {
            counter.textContent = totalDownloadCount.toLocaleString();
            totalReleaseCounter.textContent=totalReleaseCount.toLocaleString();
        }
    };

    // 缓动函数：二次淡出
    const easeOutQuad = t => t * (2 - t);

    requestAnimationFrame(animate);
</script>